// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"gin-gonic-api/app/controller"
	"gin-gonic-api/app/repository"
	"gin-gonic-api/app/service"
	"github.com/google/wire"
)

// Injectors from injector.go:

func Init() *Initialization {
	gormDB := ConnectToDB()
	userRepositoryImpl := repository.UserRepositoryInit(gormDB)
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	roleRepositoryImpl := repository.RoleRepositoryInit(gormDB)

	projectRepositoryImpl := repository.ProjectRepositoryInit(gormDB)
	projectServiceImpl := service.ProjectServiceInit(projectRepositoryImpl)
	projectControllerImpl := controller.ProjectControllerInit(projectServiceImpl)
	slideRepositoryImpl := repository.SlideRepositoryInit(gormDB)

	modelRepositoryImpl := repository.ModelRepositoryInit(gormDB)
	modelServiceImpl := service.ModelServiceInit(modelRepositoryImpl)
	modelControllerImpl := controller.ModelControllerInit(modelServiceImpl)
	
	initialization := NewInitialization(userRepositoryImpl, userServiceImpl, userControllerImpl, roleRepositoryImpl,
		projectRepositoryImpl, projectServiceImpl, projectControllerImpl, slideRepositoryImpl,
		modelRepositoryImpl, modelServiceImpl, modelControllerImpl,
	)
	return initialization
}

// injector.go:

var db = wire.NewSet(ConnectToDB)

var userServiceSet = wire.NewSet(service.UserServiceInit, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)))

var userRepoSet = wire.NewSet(repository.UserRepositoryInit, wire.Bind(new(repository.ProjectRepository), new(*repository.ProjectRepositoryImpl)))

var userCtrlSet = wire.NewSet(controller.UserControllerInit, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))

var roleRepoSet = wire.NewSet(repository.RoleRepositoryInit, wire.Bind(new(repository.RoleRepository), new(*repository.RoleRepositoryImpl)))

var projectRepoSet = wire.NewSet(repository.ProjectRepositoryInit, wire.Bind(new(repository.ProjectRepository), new(*repository.ProjectRepositoryImpl)))

var projectServiceSet = wire.NewSet(service.ProjectServiceInit, wire.Bind(new(service.ProjectService), new(*service.ProjectServiceImpl)))

var projectCtrlSet = wire.NewSet(controller.ProjectControllerInit, wire.Bind(new(controller.ProjectController), new(*controller.ModelControllerImpl)))

var slideRepoSet = wire.NewSet(repository.SlideRepositoryInit, wire.Bind(new(repository.SlideRepository), new(*repository.SlideRepositoryImpl)))

var modelRepoSet = wire.NewSet(repository.ModelRepositoryInit, wire.Bind(new(repository.ModelRepository), new(*repository.ModelRepositoryImpl)))

var modelServiceSet = wire.NewSet(service.ModelServiceInit, wire.Bind(new(service.ModelService), new(*service.ModelServiceImpl)))

var modelCtrlSet = wire.NewSet(controller.ModelControllerInit, wire.Bind(new(controller.ModelController), new(*controller.ModelControllerImpl)))

